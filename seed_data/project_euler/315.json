{
    "body": "<p></p><div align=\"center\"><img src=\"project/images/p315_clocks.gif\" alt=\"p315_clocks.gif\"/></div><p>Sam and Max are asked to transform two digital clocks into two &quot;digital root&quot; clocks.<br/>\nA digital root clock is a digital clock that calculates digital roots step by step.</p><p>When a clock is fed a number, it will show it and then it will start the calculation, showing all the intermediate values until it gets to the result.<br/>\nFor example, if the clock is fed the number 137, it will show: &quot;<b>137</b>&quot; → &quot;<b>11</b>&quot; → &quot;<b>2</b>&quot; and then it will go black, waiting for the next number.</p><p>Every digital number consists of some light segments: three horizontal (top, middle, bottom) and four vertical (top-left, top-right, bottom-left, bottom-right).<br/>\nNumber &quot;<b>1</b>&quot; is made of vertical top-right and bottom-right, number &quot;<b>4</b>&quot; is made by middle horizontal and vertical top-left, top-right and bottom-right. Number &quot;<b>8</b>&quot; lights them all.</p><p>The clocks consume energy only when segments are turned on/off.<br/>\nTo turn on a &quot;<b>2</b>&quot; will cost 5 transitions, while a &quot;<b>7</b>&quot; will cost only 4 transitions.</p><p>Sam and Max built two different clocks.</p><p>Sam&apos;s clock is fed e.g. number 137: the clock shows &quot;<b>137</b>&quot;, then the panel is turned off, then the next number (&quot;<b>11</b>&quot;) is turned on, then the panel is turned off again and finally the last number (&quot;<b>2</b>&quot;) is turned on and, after some time, off.<br/>\nFor the example, with number 137, Sam&apos;s clock requires:<br/></p><table><tr><td>&quot;<b>137</b>&quot;</td><td>:</td><td>(2 + 5 + 4) × 2 = 22 transitions (&quot;<b>137</b>&quot; on/off).</td></tr><tr><td>&quot;<b>11</b>&quot;</td><td>:</td><td>(2 + 2) × 2 = 8 transitions (&quot;<b>11</b>&quot; on/off).</td></tr><tr><td>&quot;<b>2</b>&quot;</td><td>:</td><td>(5) × 2 = 10 transitions (&quot;<b>2</b>&quot; on/off).</td></tr></table>\nFor a grand total of 40 transitions.\n\n<p>Max&apos;s clock works differently. Instead of turning off the whole panel, it is smart enough to turn off only those segments that won&apos;t be needed for the next number.<br/>\nFor number 137, Max&apos;s clock requires:<br/></p><table><tr><td>&quot;<b>137</b>&quot;<br/><br/></td><td>:<br/><br/></td><td>2 + 5 + 4 = 11 transitions (&quot;<b>137</b>&quot; on)<br/>\n7 transitions (to turn off the segments that are not needed for number &quot;<b>11</b>&quot;).</td></tr><tr><td>&quot;<b>11</b>&quot;<br/><br/><br/></td><td>:<br/><br/><br/></td><td>0 transitions (number &quot;<b>11</b>&quot; is already turned on correctly)<br/>\n3 transitions (to turn off the first &quot;<b>1</b>&quot; and the bottom part of the second &quot;<b>1</b>&quot;; <br/>\nthe top part is common with number &quot;<b>2</b>&quot;).</td></tr><tr><td>&quot;<b>2</b>&quot;<br/><br/></td><td>:<br/><br/></td><td>4 transitions (to turn on the remaining segments in order to get a &quot;<b>2</b>&quot;)<br/>\n5 transitions (to turn off number &quot;<b>2</b>&quot;).</td></tr></table>\nFor a grand total of 30 transitions.\n\n<p>Of course, Max&apos;s clock consumes less power than Sam&apos;s one.<br/>\nThe two clocks are fed all the prime numbers between A = 10<sup>7</sup> and B = 2×10<sup>7</sup>. <br/>\nFind the difference between the total number of transitions needed by Sam&apos;s clock and that needed by Max&apos;s one.</p>",
    "id": "315",
    "title": "Digital root clocks",
    "url": "https://projecteuler.net/problem=315"
}
